buildscript {
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id "org.jetbrains.intellij" version "0.4.5"
}

repositories {
    maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }

    mavenCentral()
}

version = "${new File('pluginVersion.txt').getText('UTF-8')}"

allprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

    plugins.withType(JavaPlugin) {
        test {
            systemProperty "NO_FS_ROOTS_ACCESS_CHECK", "true"
        }
    }

    sourceSets {
        main {
            java.srcDirs 'src'
            resources.srcDir 'resources'
        }
        test {
            java.srcDir 'test'
            resources.srcDir 'testResources'
        }
    }

    apply plugin: 'org.jetbrains.intellij'
    intellij {
        version ideaVersion
        type "IC"
        pluginName 'BashSupport'
        plugins 'IntelliLang', 'terminal'
        downloadSources Boolean.valueOf(sources)

        patchPluginXml {
            sinceBuild '145.0'
            untilBuild '191.*'
        }
    }

    publishPlugin {
        username 'wallaby'
        password System.properties['intellij.publish.password']
        channels pluginChannels
    }

    apply plugin: 'jacoco'
    jacoco {
        toolVersion = "0.7.9"
        reportsDir = file("$buildDir/reports/coverage")
    }
    test {
        finalizedBy jacocoTestReport
        jacoco {
            enabled true
            append false
            includes ["com.ansorgit.*"]
        }
    }

    ant.importBuild("build.xml")
    task doJFlex(dependsOn: JavaPlugin.PROCESS_RESOURCES_TASK_NAME) {
        doLast {
            jflex
        }
    }

    compileJava.dependsOn(doJFlex)

    // test logging configuration, shows test progress and messages to standard error
    // see https://docs.gradle.org/current/javadoc/org/gradle/api/tasks/testing/logging/TestLogEvent.html
    test {
        testLogging {
            events = [
                org.gradle.api.tasks.testing.logging.TestLogEvent.FAILED,
                org.gradle.api.tasks.testing.logging.TestLogEvent.PASSED,
                org.gradle.api.tasks.testing.logging.TestLogEvent.SKIPPED,
                org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_ERROR
            ]
        }
    }

    // during tests gradle-intellij seems to use the same classpath for the IDE and the plugin
    // we're still using Kotlin 1.2.x, but 191.x is using Kotlin 1.3.x
    // these different version are causing runtime issues during "gradle test" due to incompatible library versions
    // we're working around this by marking our kotlin library as compileOnle, i.e. provided at runtime
    // the better fix is to not bundle our custom version of Kotlin, but right now we're still supporting 145.x with
    // a very old version of Kotlin.
    if (ideaBranch == "191" || ideaVersion.startsWith("191")) {
        dependencies {
            compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
        }
    } else {
        dependencies {
            compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
        }
    }
}

task addPsiViewer {
    if (ideaBranch != null && ideaBranch != "") {
        def slurper = new groovy.json.JsonSlurper()
        def psiVersions = slurper.parseText(psiViewerVersions)
        def psiVersion = psiVersions[ideaBranch]
        if (psiVersion != null) {
            intellij.plugins += "PsiViewer:$psiVersion"
        }
    }
}
prepareSandbox.finalizedBy addPsiViewer
