<!--
  ~ Copyright 2010 Joachim Ansorg, mail@ansorg-it.com
  ~ File: plugin.xml, Class: plugin.xml
  ~ Last modified: 2010-07-08
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<idea-plugin version="2" url="http://www.ansorg-it.com/en/products_bashsupport.html">
    <name>BashSupport</name>
    <category>Custom Languages</category>
    <version>0.9.13-maia</version>
    <vendor url="http://www.ansorg-it.com/" email="mail@ansorg-it.com">Joachim Ansorg</vendor>
    <idea-version since-build="91.15" until-build="98.999"/>
    <!-- Mark the plugin as compatible with RubyMine and other products based on the IntelliJ platform -->
    <depends>com.intellij.modules.lang</depends>

    <description><![CDATA[
  <html>
    <h3>Bash support for IntelliJ 9</h3>
    <br>
            <b>Features:</b><br>
            <ul>
            <li> Support for Bash 3.2 and 4.0</li>
            <li> Advanced syntax highlighting and configuration</li>
            <li> Run Bash scripts within IDEA</li>
            <li> Autocompletion for variables, functions and file paths</li>
            <li> Inspections and quickfixes for common problems</li>
            <li> Basic refactorings (rename variables, functions and heredoc markers)</li>
            <li> Advanced navigation (structure view, go to declaration, ...)</li>
            <li> Ctrl+Q (Quick documentation lookup) for internal commands, external commands and functions</li>
            <li> Highlight usages in file for functions and variables</li>
            <li> Code folding, line commenting / uncommenting, brace matching</li>
            <li> Supports file extensions .sh, .bash and files without extension (configurable)</li>
            <li> Advanced support for arithmetic expressions and brace expansions</li>
            </ul>

            <br>
            <b>Experimental features:</b>
            <ul>
                <li>Code formatter (turned off by default)</li>
                <li>Bash repl</li>
            </ul>
  </html>
  ]]></description>

    <change-notes><![CDATA[
    <html>
       <b>Changes in version 0.9.13-maia:</b>
       <ul>
         <li>Fixed method not found error in EvaluateExpansionInspection                                </li>
         <li>Reworked and improved variable resolving                                                   </li>
         <li>Fixed exception "Directory index is not initialized yet ..."                               </li>
         <li>Fixed scope of psi elements, previously a variable rename went through the whole module    </li>
         <li>Improved support for local variable references                                             </li>
         <li>New inspection to detect local variable definition on global level                         </li>
         <li>Quickfix to remove the local keyword from a global variable definition                     </li>
       </ul>

       <b>Changes in version 0.9.12-maia:</b>
       <ul>
            <li>Fixed parsing of for loops with optional command end after a command group
            </li><li>Fixed static evaluation quickfix to offer result for "$(((1+2)))"
            </li><li>Performance improvements, especially for offline code analysis
            </li><li>Cached oftenly performed calculation in arithmetic evaluation
            </li><li>Integrated custom exception reporting tool by Etienne Studer
            </li><li>"Add shebang" quickfix is not displayed for a script in the Bash REPL
            </li><li>Shortcut "Ctrl+Enter" for the repl console run action
            </li><li>Slightly Improved error reporting
            </li><li>Parser improvements for function definitions
            </li><li>Properly resetting PSI element caches now
            </li><li>Improved parsing of composed arithmetic number literals (e.g. 123$a)
            </li><li>Hex, octal and custom-base literals in arithmetic expressions
            </li><li>Variable name completion in evaluating heredocs
            </li><li>Improved some inspection/quickfix messages
            </li><li>Improved evaluation of static arithmetic expressions
            </li><li>Improved parser (correctly parses "a=1 ((1))" now)
            </li><li>Less error markers in faulty case commands
            </li><li>Fixed error marker handling, no large red blocks any more
            </li><li>Inspection to detect invalid filedescriptors (only the range &0 to &9 is valid)
            </li><li>Support for the % operator in arithmetic expressions
            </li><li>The quick documentation lookup (Ctrl+Q) now tries
               to read the current system's info page for an external command,
               if it is available (needs the commands "info" in the path,
               optionally "txt2html" to turn the plain text into html).
       </ul>

       <b>Recent changes:</b>
       <ul>
          <li>Support for the "readonly" command</li>
          <li>New inspection to detect changes to read-only variables</li>
          <li>New inspection to detect changes to shell read-only variables, $EUID for example</li>
          <li>New inspection which detects integer division with a remainder</li>
          <li>Fixed variable renaming of ${a} variables</li>
          <li>Compatibility with RubyMine 2.0.2</li>
          <li> Fixed for heredoc folding and highlighting                                                     </li>
          <li> A process started withing a run script action is terminated when the stop button is pressed    </li>
          <li> Removed global settings, these are project settings now</li>
          <li> Arithmetic expressions are supported now, including variable declarations</li>
          <li> Color configuration for heredoc start and end markers</li>
          <li> New Bashsupport facet to configure which files without extensions are Bash scripts</li>
          <li> Source code released, licensed under the terms of the Apache License 2.0</li>
          <li> Path/file completion/</li>
          <li> Configurable support for Bash version 4.0.</li>
          <li> Expansions now can be replaced with the evaluated result.</li>
          <li> Basic code formatter, not yet configurable (experimental, use at your own risk).</li>
        </ul>
    </html>
    ]]>
    </change-notes>

    <application-components>
        <component>
            <implementation-class>com.ansorgit.plugins.bash.lang.BashLoader</implementation-class>
        </component>

        <component>
            <implementation-class>com.ansorgit.plugins.bash.settings.facet.BashFacetLoader</implementation-class>
        </component>
    </application-components>

    <project-components>
        <component>
            <implementation-class>
                com.ansorgit.plugins.bash.settings.BashProjectSettingsConfigurable
            </implementation-class>
        </component>

        <component>
            <implementation-class>com.ansorgit.plugins.bash.settings.BashProjectSettingsComponent</implementation-class>
        </component>

        <!--<component>
            <implementation-class>com.ansorgit.plugins.bash.lang.BashLanguage$BashHighlighterFactory</implementation-class>
        </component>-->

        <component>
            <implementation-class>
                com.ansorgit.plugins.bash.editor.highlighting.codeHighlighting.BashHighlighterFactory
            </implementation-class>
        </component>
    </project-components>

    <!-- Plugin's module components -->
    <module-components>
    </module-components>

    <actions>
        <!--        <action id="BashErrorReporter.TriggerException"
                        class="nu.studer.idea.errortesting.TriggerExceptionAction"
                        text="Trigger Exception"
                        description="Triggers an exception">
                    <add-to-group group-id="ToolsMenu" anchor="last"/>
                </action>
        -->
        <action id="Bash.NewBashScript" class="com.ansorgit.plugins.bash.actions.NewBashFileAction"
                text="Bash Script" description="Create new Bash script file">
            <add-to-group group-id="NewGroup" relative-to-action="NewFile" anchor="after"/>
        </action>


        <!-- A subset of the REPL actions that should be displayed in the panel toolbar. -->
        <group id="Bash.REPL.Group"
               class="com.intellij.openapi.actionSystem.DefaultActionGroup"
               text="Bash REPL" description="Bash" popup="true">

            <action id="com.ansorgit.plugins.bash.actions.AddReplAction"
                    class="com.ansorgit.plugins.bash.actions.AddReplAction" text="Add new Bash console"
                    description="Open a new Bash console window">
            </action>

            <add-to-group group-id="ToolsMenu" anchor="last"/>
        </group>
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <fileTypeFactory implementation="com.ansorgit.plugins.bash.file.BashFileTypeLoader"/>

        <!--Syntax highlighting-->
        <syntaxHighlighter key="Bash"
                           implementationClass="com.ansorgit.plugins.bash.editor.highlighting.BashSyntaxHighlighter"/>
        <colorSettingsPage
                implementation="com.ansorgit.plugins.bash.editor.highlighting.BashColorsAndFontsPage"/>

        <!--Language extensions -->
        <lang.braceMatcher language="Bash"
                           implementationClass="com.ansorgit.plugins.bash.editor.highlighting.BashBraceMatcher"/>

        <lang.commenter language="Bash"
                        implementationClass="com.ansorgit.plugins.bash.editor.highlighting.BashCommenter"/>

        <lang.parserDefinition language="Bash"
                               implementationClass="com.ansorgit.plugins.bash.lang.parser.BashParserDefinition"/>

        <lang.foldingBuilder language="Bash"
                             implementationClass="com.ansorgit.plugins.bash.editor.codefolding.BashFoldingBuilder"/>

        <lang.psiStructureViewFactory language="Bash"
                                      implementationClass="com.ansorgit.plugins.bash.structureview.BashStructureViewFactory"/>

        <lang.refactoringSupport language="Bash"
                                 implementationClass="com.ansorgit.plugins.bash.refactoring.BashRefactoringSupport"/>

        <lang.documentationProvider language="Bash"
                                    implementationClass="com.ansorgit.plugins.bash.documentation.BashDocumentationProvider"/>

        <lang.findUsagesProvider language="Bash"
                                 implementationClass="com.ansorgit.plugins.bash.editor.usages.BashFindUsagesProvider"/>

        <lang.formatter language="Bash"
                        implementationClass="com.ansorgit.plugins.bash.editor.formatting.BashFormattingModelBuilder"/>

        <!--
        <codeStyleSettingsProvider implementation="org.jetbrains.plugins.clojure.formatter.codeStyle.ClojureCodeStyleSettingsProvider"/>
        -->

        <completion.contributor language="Bash"
                                implementationClass="com.ansorgit.plugins.bash.editor.codecompletion.BashCompletionContributor"/>

        <inspectionToolProvider implementation="com.ansorgit.plugins.bash.editor.inspections.InspectionProvider"/>

        <annotator language="Bash"
                   implementationClass="com.ansorgit.plugins.bash.editor.annotator.BashAnnotator"/>

        <frameworkSupport
                implementation="com.ansorgit.plugins.bash.settings.facet.BashFacetTypeFrameworkSupportProvider"/>

        <configurationType implementation="com.ansorgit.plugins.bash.runner.BashConfigurationType"/>
        <configurationProducer implementation="com.ansorgit.plugins.bash.runner.BashRunConfigurationProducer"/>
        <programRunner implementation="com.ansorgit.plugins.bash.runner.BashRunner"/>

        <!-- Repl-->
        <!--
        <projectService serviceInterface="com.ansorgit.plugins.bash.repl.ReplManager"
                        serviceImplementation="com.ansorgit.plugins.bash.repl.ReplManager"/>
        -->

        <!-- Error reporter-->
        <errorHandler implementation="nu.studer.idea.errorreporting.PluginErrorReportSubmitter"/>
    </extensions>
</idea-plugin>