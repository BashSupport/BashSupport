<!--
  ~ Copyright 2010 Joachim Ansorg, mail@ansorg-it.com
  ~ File: plugin.xml, Class: plugin.xml
  ~ Last modified: 2012-12-19
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<idea-plugin version="2" url="http://www.ansorg-it.com/en/products_bashsupport.html">
    <name>BashSupport</name>
    <category>Custom Languages</category>
    <version>1.1beta12</version>

    <vendor url="http://www.ansorg-it.com/"
            email="mail@ansorg-it.com"
            logo="resources/icons/bash-16.png">Joachim Ansorg
    </vendor>

    <!-- Requires IDEA 12.0 or later -->
    <idea-version since-build="123.72" until-build="126.999"/>

    <!-- Mark the plugin as compatible with RubyMine and other products based on the IntelliJ platform -->
    <depends>com.intellij.modules.lang</depends>

    <description><![CDATA[
  <html>
    Bash 4 support for InteliJ IDEA 12. Supported are, among other things, syntax highlighting,
    rename refactoring, documentation lookup and various inspections with quickfixes.
  </html>
  ]]></description>

    <change-notes><![CDATA[
    <html>
       <b>Changes in version 1.1beta12:</b>
       <ul>
         <li>Fixed flashing gutter icons</li>
       </ul>

       <b>Changes in version 1.1beta11:</b>
       <ul>
         <li>Fixed abstract method errors with IntelliJ IDEA 12</li>
         <li>Improved parsing of paramter expansion (i.e. the parsing of the / operator)</li>
         <li>Added parsing of history expansions                                        </li>
         <li>Fixed parsing of single ! tokens                                           </li>
         <li>Fix to allow umlaut characters in command names and arguments.        </li>
         <li>Fixed testcases to work with IntelliJ IDEA 123.4                           </li>
       </ul>

       <b>Changes in version 1.1beta10:</b>
       <ul>
        <li>Fixed abstract method errors with builds >= 121 </li>
       </ul>

       <b>Changes in version 1.1beta9:</b>
       <ul>
            <li>Compatibility with IntelliJ IDEA 12 plattform builds</li>
       </ul>

       <b>Changes in version 1.1beta8:</b>
       <ul>
            <li>Compatibility with IntelliJ IDEA 11.1 plattform builds</li>
       </ul>

       <b>Changes in version 1.1beta7:</b>
       <ul>
         <li>Possible fix for the "marker not closed" exception</li>
       </ul>

       <b>Changes in version 1.1beta6:</b>
       <ul>
         <li>Compatibility with 11.1 EAP</li>
         <li>Possible fix for exception "StringIndexOutOfBoundsException"   </li>
         <li>Less inspection warnings                                       </li>
         <li>Hopefully fixed "marker not closed" exception                  </li>
         <li>Better error messages for empty loop bodies                    </li>
       </ul>

       <b>Changes in version 1.1beta5:</b>
       <ul>
            <li>Parser fixes</li>
            <li>Enabled debug mode for beta releases to get better catch parsing exceptions</li>
            <li>Fixed several parsing exceptions</li>
       </ul>

       <b>Changes in version 1.1beta4:</b>
       <ul>
            <li>Fixed parsing of nested strings (regression in 1.1beta3)</li>
            <li>Performance improvements</li>
            <li>Parser improvements</li>
       </ul>

       <b>Changes in version 1.1beta3:</b>
       <ul>
            <li>Parser improvements</li>
       </ul>

       <b>Changes in version 1.1beta2:</b>
       <ul>
            <li>Compatible with the IntelliJ IDEA 11 beta2 (build 111+)
            <li>Parser fixes</li>
       </ul>

       <b>Changes in version 1.1beta1:</b>
       <ul>
        <li>Compatible with IntelliJ 11 EAP or later</li>
        <li>Parser improvements</li>
       </ul>

       <b>Changes in version 1.0:</b>
       <ul>
        <li>Compatible with IntelliJ 10.5 or later</li>
        <li>The Bash REPL now uses Enter instead of Ctrl+Enter</li>
        <li>Removed Java options tab from Bash run configuration settings</li>
       </ul>

       <b>Changes in version 0.9.23:</b>
       <ul>
        <li>Fixed exception which occurred when editing external files</li>
       </ul>

       <b>Changes in version 0.9.22:</b>
       <ul>
        <li>Restored documentation lookup for internal and external commands</li>
        <li>#47: Lexer fixed to parse ${_a}</li>
        <li>#46: Default value with parentheses not parsed correctly</li>
        <li>Find usages enabled on function definitions</li>
        <li>Improved performance of parsing files which contain include files</li>
        <li>Inspection to detect array use of simple variables</li>
        <li>Inspection to detect simple use of array variables</li>
        <li>It is possible now to define functions which have the same name as built-in Bash commands</li>
        <li>Inspection to mark functions which override built-in Bash commands</li>
       </ul>

       <b>Changes in version 0.9.21:</b>
       <ul>
         <li>(Almost) full support for arrays</li>
         <li>Fixed unused function inspection in files which reference elements in files which include the current file</li>
         <li>Compatible with PyCharm 1.2</li>
       </ul>

       <b>Changes in version 0.9.20:</b>
       <ul>
         <li>Fixed detection of deep recursive file include loops</li>
         <li>Ctrl+B on file references (e.g. in include command) is supported now</li>
         <li>Issue #35: Math calculations using square brackets not supported</li>
         <li>Improved autocompletion</li>
         <li>Fixed exception if an included file was not a Bash file</li>
       </ul>

       <b>Changes in version 0.9.19:</b>
       <ul>
         <li>Documentation lookup for variable definitions, the comment before the definition is displayed, if available</li>
         <li>Variable completion from included files</li>
         <li>Autocompletion inside of ${}</li>
         <li>Globals and built-ins are now offered after second completion call, if enabled</li>
         <li>Support for include files and contained elements (find references, rename, go to defintion, ...)</li>
         <li>Issue #32: Length-function not supported: Expected a command</li>
         <li>Issue #34: Unresolved variable in string definition</li>
         <li>Issue #35: Math calculations using square brackets not supported</li>
         <li>Issue #36: Incorrect inspection of unused parameter when using $* inside function</li>
       </ul>

       <b>Changes in version 0.9.18:</b>
       <ul>
         <li>New inspection to convert a simple variable usage $a to the equivalent parameter expansion ${a}</li>
         <li>New inspection to highlight unused parameter values for function calls</li>
         <li>New inspection to highlight unused function definitions</li>
         <li>Bugfix: A duplicate function definition on the global level is highlighted again</li>
         <li>Fixed exception which occured while editing the shebang line of a script</li>
         <li>Inline renaming of variables inside of parameter expansion elements</li>
         <li>Fixed parsing of HereDocs with single quote markers, i.e. started with &lt;&lt;'EOF'</li>
         <li>Fixed parsing of variables in evaluating heredocs</li>
         <li>Compatible with the build number range of PyCharm 1.1</li>
         <li>Bugfixes</li>
       </ul>

       <b>Recent changes:</b>
       <ul>
          <li>Support for the "readonly" command</li>
          <li>New inspection to detect changes to read-only variables</li>
          <li>New inspection to detect changes to shell read-only variables, $EUID for example</li>
          <li>New inspection which detects integer division with a remainder</li>
          <li>Fixed variable renaming of ${a} variables</li>
          <li>Compatibility with RubyMine 2.0.2</li>
          <li>Fixed for heredoc folding and highlighting</li>
          <li>A process started withing a run script action is terminated when the stop button is pressed    </li>
          <li>Removed global settings, these are project settings now</li>
          <li>Arithmetic expressions are supported now, including variable declarations</li>
          <li>Color configuration for heredoc start and end markers</li>
          <li>New Bashsupport facet to configure which files without extensions are Bash scripts</li>
          <li>Source code released, licensed under the terms of the Apache License 2.0</li>
          <li>Path/file completion/</li>
          <li>Configurable support for Bash version 4.0.</li>
          <li>Expansions now can be replaced with the evaluated result.</li>
          <li>Basic code formatter, not yet configurable (experimental, use at your own risk).</li>
        </ul>
    </html>
    ]]>
    </change-notes>

    <application-components>
        <component>
            <implementation-class>com.ansorgit.plugins.bash.lang.BashLoader</implementation-class>
        </component>

        <component>
            <implementation-class>com.ansorgit.plugins.bash.settings.facet.BashFacetLoader</implementation-class>
        </component>
    </application-components>

    <project-components>
        <component>
            <implementation-class>
                com.ansorgit.plugins.bash.settings.BashProjectSettingsConfigurable
            </implementation-class>
        </component>

        <component>
            <implementation-class>com.ansorgit.plugins.bash.settings.BashProjectSettingsComponent</implementation-class>
        </component>

        <component>
            <implementation-class>
                com.ansorgit.plugins.bash.editor.highlighting.codeHighlighting.BashHighlighterFactory
            </implementation-class>
        </component>
    </project-components>

    <!-- Plugin's module components -->
    <module-components>
    </module-components>

    <actions>
        <!--        <action id="BashErrorReporter.TriggerException"
                        class="nu.studer.idea.errortesting.TriggerExceptionAction"
                        text="Trigger Exception"
                        description="Triggers an exception">
                    <add-to-group group-id="ToolsMenu" anchor="last"/>
                </action>
        -->
        <action id="Bash.NewBashScript" class="com.ansorgit.plugins.bash.actions.NewBashFileAction"
                text="Bash Script" description="Create new Bash script file">
            <add-to-group group-id="NewGroup" relative-to-action="NDNewFile" anchor="after"/>
        </action>


        <!-- A subset of the REPL actions that should be displayed in the panel toolbar. -->
        <group id="Bash.REPL.Group"
               class="com.intellij.openapi.actionSystem.DefaultActionGroup"
               text="Bash REPL" description="Bash" popup="false">

            <action id="com.ansorgit.plugins.bash.actions.AddReplAction"
                    class="com.ansorgit.plugins.bash.actions.AddReplAction" text="Add new Bash console"
                    description="Open a new Bash console window">
            </action>

            <add-to-group group-id="ToolsMenu" anchor="last"/>
        </group>
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <fileTypeFactory implementation="com.ansorgit.plugins.bash.file.BashFileTypeLoader"/>

        <!--Syntax highlighting-->
        <syntaxHighlighter key="Bash"
                           implementationClass="com.ansorgit.plugins.bash.editor.highlighting.BashSyntaxHighlighter"/>
        <colorSettingsPage
                implementation="com.ansorgit.plugins.bash.editor.highlighting.BashColorsAndFontsPage"/>

        <!--Language extensions -->
        <lang.braceMatcher language="Bash"
                           implementationClass="com.ansorgit.plugins.bash.editor.highlighting.BashBraceMatcher"/>

        <lang.commenter language="Bash"
                        implementationClass="com.ansorgit.plugins.bash.editor.highlighting.BashCommenter"/>

        <lang.parserDefinition language="Bash"
                               implementationClass="com.ansorgit.plugins.bash.lang.parser.BashParserDefinition"/>

        <lang.foldingBuilder language="Bash"
                             implementationClass="com.ansorgit.plugins.bash.editor.codefolding.BashFoldingBuilder"/>

        <lang.psiStructureViewFactory language="Bash"
                                      implementationClass="com.ansorgit.plugins.bash.structureview.BashStructureViewFactory"/>

        <lang.refactoringSupport language="Bash"
                                 implementationClass="com.ansorgit.plugins.bash.refactoring.BashRefactoringSupport"/>

        <lang.documentationProvider language="Bash"
                                    implementationClass="com.ansorgit.plugins.bash.documentation.BashDocumentationProvider"/>

        <lang.findUsagesProvider language="Bash"
                                 implementationClass="com.ansorgit.plugins.bash.editor.usages.BashFindUsagesProvider"/>

        <lang.formatter language="Bash"
                        implementationClass="com.ansorgit.plugins.bash.editor.formatting.BashFormattingModelBuilder"/>

        <lang.tokenSeparatorGenerator language="Bash"
                                      implementationClass="com.ansorgit.plugins.bash.refactoring.BashTokenSeparatorGenerator"/>

        <readWriteAccessDetector
                implementation="com.ansorgit.plugins.bash.editor.accessDetector.BashReadWriteAccessDetector"/>

        <!--
        <codeStyleSettingsProvider implementation="org.jetbrains.plugins.clojure.formatter.codeStyle.ClojureCodeStyleSettingsProvider"/>
        -->

        <completion.contributor language="Bash"
                                implementationClass="com.ansorgit.plugins.bash.editor.codecompletion.BashCompletionContributor"/>

        <!--
        <weigher key="completionSorting"
                 implementationClass="com.ansorgit.plugins.bash.editor.codecompletion.BashVariableCompletionWeigher"/>
        -->

        <inspectionToolProvider implementation="com.ansorgit.plugins.bash.editor.inspections.InspectionProvider"/>

        <annotator language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.annotator.BashAnnotator"/>

        <codeInsight.lineMarkerProvider language="Bash"
                                        implementationClass="com.ansorgit.plugins.bash.editor.BashLineMarkerProvider"/>

        <frameworkSupport
                implementation="com.ansorgit.plugins.bash.settings.facet.BashFacetTypeFrameworkSupportProvider"/>

        <configurationType implementation="com.ansorgit.plugins.bash.runner.BashConfigurationType"/>
        <configurationProducer implementation="com.ansorgit.plugins.bash.runner.BashRunConfigurationProducer"/>
        <programRunner implementation="com.ansorgit.plugins.bash.runner.BashRunner"/>

        <!-- Repl-->
        <!--
        <projectService serviceInterface="com.ansorgit.plugins.bash.repl.ReplManager"
                        serviceImplementation="com.ansorgit.plugins.bash.repl.ReplManager"/>
        -->

        <!-- Error reporter-->
        <errorHandler implementation="nu.studer.idea.errorreporting.PluginErrorReportSubmitter"/>

        <!-- stubs -->
        <stubElementTypeHolder class="com.ansorgit.plugins.bash.lang.parser.BashElementTypes"/>

        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashFunctionNameIndex"/>
        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashScriptNameIndex"/>
        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashFullScriptNameIndex"/>
        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashIncludedFilenamesIndex"/>
        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashIncludeCommandIndex"/>
        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashVarDefIndex"/>
    </extensions>
</idea-plugin>
