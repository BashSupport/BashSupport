<!--
  ~ Copyright 2013 Joachim Ansorg, mail@ansorg-it.com
  ~ File: plugin.xml, Class: plugin.xml
  ~ Last modified: 2013-05-12
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<idea-plugin url="https://www.plugin-dev.com/project/bashsupport/">
    <resource-bundle>com.ansorgit.plugins.bash.bash</resource-bundle>

    <name>BashSupport</name>
    <category>Custom Languages</category>
    <version>1.7.9</version>

    <vendor url="https://www.plugin-dev.com/" email="mail@plugin-dev.com">Joachim Ansorg</vendor>

    <!-- Requires IDEA 145.x or later -->
    <idea-version since-build="145.0" until-build="191.*"/>

    <!-- Mark the plugin as compatible with RubyMine and other products based on the IntelliJ platform -->
    <depends>com.intellij.modules.lang</depends>
    <depends optional="true" config-file="bashsupport-intellilang.xml">org.intellij.intelliLang</depends>
    <depends optional="true" config-file="bashsupport-terminal.xml">org.jetbrains.plugins.terminal</depends>

    <description><![CDATA[<html>
    Bash language support for the IntelliJ platform.<br/>
    Supports run configurations, syntax highlighting, rename refactoring, documentation lookup, inspections, quickfixes and much more.<br>
    Do you like it? Give it a star at <a href="https://github.com/BashSupport/BashSupport">GitHub</a>. Rate it at <a href="https://plugins.jetbrains.com/plugin/4230-bashsupport">plugins.jetbrains.com</a>.
    There's no future of BashSupport without strong support from the community!
    </html>]]></description>

    <change-notes><![CDATA[
        <html>

        <b>Changes in version 1.7.8:</b>
        <ul>
          <li>Add internal documentation for ulimit command (contributed by dzieciolowski)</li>
          <li>#458: Support shopt -s extglob syntax</li>
          <li>#687: compound command () incorrectly highlighted. Removed highlighting of subshells, highlighting of contained elements must not be overridden. For example, comments inside of subshells must still be displayed as comments.</li>
          <li>Removed override of highlighting inside of backticks `echo hello $world`. Now elements inside of backticks are highlighted as in subshell and group commands. Previously multi-line backticks weren't properly shown, for example.</li>
        </ul><br>

        <b>Changes in version 1.7.7:</b>
        <ul>
         <li>#694: Fix ConcurrentModificationException</li>
        </ul><br>

        <b>Changes in version 1.7.6:</b>
        <ul>
         <li>#677: Exception in idea.log of the latest CLion EAP</li>
         <li>#671: Ignore/log exception while scanning $PATH, e.g. while a system update is active.</li>
         <li>#668: Support `readarray` as alias of `mapfile` (contributed by niknetniko)</li>
         <li>#664: fix 'replace with double brackets' quick fix (contributed by bjansen)</li>
         <li>#657: Exception when the arithmetic operator &gt;&gt; was used</li>
         <li>#655: Improve performance of parsing and reference resolving. Disable the folding of variable values by default as this is too slow for large files. You can enable this in the settings if you want to keep this behavior.</li>
        </ul><br>

        <b>Changes in version 1.7.5 (eap channel):</b>
        <ul>
         <li>#660: Add support for EAP 191.x builds </li>
        </ul><br>

        <b>Changes in version 1.7.4:</b>
        <ul>
         <li>#634: Handle invalid paths in include file inspection</li>
         <li>#636: handle parse errors in interpreter paths in run configurations</li>
         <li>#645: fix NPE in keyword handling</li>
        </ul><br>

        <b>Changes in version 1.7.3:</b>
        <ul>
            <li>Versions 1.7.0 to 1.7.2 enabled the new project interpreter by default. This was breaking old run configurations. This version now disabled the project interpreter by default and tries to keep run configurations created with 1.7.x working. We're sorry for any inconvenience which was caused by this.</li>
            <li>#624: Don't enable the project interpreter by default to keep run configurations created by 1.6.13 and earlier working. BashSupport tries to keep run configs modified by 1.7.0-1.7.2 working.</li>
            <li>#625: java.nio.file.AccessDeniedException at startup</li>
            <li>#627: Fix exception when code folding was called when indexing</li>
            <li>Don't show files in command completion which don't match *.exe or *.bat</li>
        </ul><br>

        <b>Changes in version 1.7.2:</b>
        <ul>
            <li>#622: Fix wrong size of script icons</li>
        </ul><br>

        <b>Changes in version 1.7.1:</b>
        <ul>
            <li>Handle errors parsing elements of $PATH</li>
            <li>Fix handling of interpreter path when creating new run configurations</li>
        </ul><br>

        <b>Changes in version 1.7.0:</b>
        <ul>
             <li>Feature: New icons (contributed by nosovae-dev)</li>
             <li>Feature: Show path next to path command completion items</li>
             <li>Feature: Add folding for variables (contributed by nosovae-dev)</li>
             <li>Feature: Add inspection to check, whether function name is in lower camel case (contribued by dheid)</li>
             <li>Feature: Add inspection and quickfix to detect double brackets (contribued by dheid)</li>
             <li>Feature: #478: New setting for project wide interpreter path</li>
             <li>Feature: #482: Make new Bash files executable for the current user by default</li>
             <li>Feature: #477: Support for .bashrc and custom file extensions</li>
             <li>Improve handling of local variables in functions</li>
             <li>Variables declared by local -r are now treated as read-only (contributed by nosovae-dev)</li>
             <li>#318: Codefolding support (contributed by nosovae-dev)</li>
             <li>#400: Heredoc after command & is not parsed (contributed by nosovae-dev)</li>
             <li>#487: Use native path for shell script and working directory for new Bash run configurations</li>
             <li>#518: printf -v "${var}" flagged as Error</li>
             <li>#519: local -a arrays not recognized (contributed by nosovae-dev)</li>
             <li>#521: control+j does not offer for loop solutions (contributed by t0r0X)</li>
             <li>#522: Not a valid identifier in shell script with Bash functions with dash (contributed by nosovae-dev)</li>
             <li>#526: Documentation wasn't shown when the caret was positioned at the end of a command</li>
             <li>#540: Tilde (~) not resolved correctly in file paths</li>
             <li>#545: Don't parse "in" in "read in" as keyword, but as variable name</li>
             <li>#546: Color schemes: "Inherit values from" has no effect when checked (contributed by nosovae-dev)</li>
             <li>#551: Add default value TERM=xterm-256color when running a Bash script if there's not value defined in the run configuration</li>
             <li>#558: Enable execute button of Bash run configuration even when IntelliJ is indexing</li>
             <li>#566: Fix slow startup of the IDE when BashSupport is installed</li>
             <li>#568: variable incorrectly flagged as read-only (contributed by nosovae-dev)</li>
             <li>#572: False-positive unresolved variables using names matching prefix parameter expansion (contributed by nosovae-dev)</li>
             <li>#599: Values passed to "export -f" were not resolved to the function definition</li>
             <li>#611: Work around "class BashIcons not found" exception which is (probably) caused by a bug in IntelliJ</li>
             <li>Add action to create a report on the currently detected file type</li>
             <li>Add kotlin language for development plugin (contributed by nosovae-dev)</li>
        </ul>
        <br/>

        <br/>
        <a href="https://github.com/jansorg/BashSupport/blob/master/Changelog.md">Full changelog</a>
        </html>
        ]]>
    </change-notes>

    <application-components>
    </application-components>

    <project-components>
        <component>
            <implementation-class>com.ansorgit.plugins.bash.settings.BashProjectSettingsComponent</implementation-class>
        </component>
    </project-components>

    <!-- Plugin's module components -->
    <module-components>
    </module-components>

    <actions>
        <action id="Bash.NewBashScript" class="com.ansorgit.plugins.bash.actions.NewBashFileAction"
                text="Bash Script" description="Create new Bash script file">
            <add-to-group group-id="NewGroup" relative-to-action="NewFile" anchor="after"/>
        </action>

        <action class="com.ansorgit.plugins.bash.actions.ReportFileTypeAction" id="bash.reportType" />

        <!-- A subset of the REPL actions that should be displayed in the panel toolbar. -->
        <group id="Bash.REPL.Group"
               class="com.intellij.openapi.actionSystem.DefaultActionGroup"
               text="Bash REPL" description="Bash" popup="false">

            <action id="Bash.AddReplAction"
                    class="com.ansorgit.plugins.bash.actions.AddReplAction" text="Add new Bash console"
                    description="Open a new Bash console window">
            </action>

            <add-to-group group-id="ToolsMenu" anchor="last"/>
        </group>
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <!-- The factory registers the known file extensions-->
        <fileTypeFactory implementation="com.ansorgit.plugins.bash.file.BashFileTypeLoader"/>
        <!-- The detector looks at the content of a file and tries to guess if it is a bash file-->
        <fileTypeDetector implementation="com.ansorgit.plugins.bash.file.BashFileTypeDetector" />

        <!-- Syntax highlighting -->
        <syntaxHighlighter key="Bash" implementationClass="com.ansorgit.plugins.bash.editor.highlighting.BashSyntaxHighlighter"/>

        <colorSettingsPage implementation="com.ansorgit.plugins.bash.editor.highlighting.BashColorsAndFontsPage"/>

        <additionalTextAttributes scheme="Default" file="colors/BashDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colors/BashDarcula.xml"/>

        <!--Language extensions -->
        <lang.braceMatcher language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.highlighting.BashBraceMatcher"/>

        <lang.commenter language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.highlighting.BashCommenter"/>

        <lang.parserDefinition language="Bash" implementationClass="com.ansorgit.plugins.bash.lang.parser.BashParserDefinition"/>

        <!--Folding builders -->
        <lang.foldingBuilder language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.codefolding.BashFoldingBuilder"/>
        <lang.foldingBuilder language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.codefolding.BashVariableFoldingBuilder"/>

        <lang.psiStructureViewFactory language="Bash" implementationClass="com.ansorgit.plugins.bash.structureview.BashStructureViewFactory"/>

        <lang.refactoringSupport language="Bash" implementationClass="com.ansorgit.plugins.bash.refactoring.BashRefactoringSupport"/>
        <renameInputValidator implementation="com.ansorgit.plugins.bash.refactoring.BashFunctionRenameInputValidator" />
        <lang.namesValidator language="Bash" implementationClass="com.ansorgit.plugins.bash.lang.BashNamesValidator"/>

        <lang.documentationProvider language="Bash" implementationClass="com.ansorgit.plugins.bash.documentation.BashDocumentationProvider"/>

        <lang.findUsagesProvider language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.usages.BashFindUsagesProvider"/>

        <lang.formatter language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.formatting.BashFormattingModelBuilder"/>

        <lang.tokenSeparatorGenerator language="Bash" implementationClass="com.ansorgit.plugins.bash.refactoring.BashTokenSeparatorGenerator"/>

        <lang.elementManipulator forClass="com.ansorgit.plugins.bash.lang.psi.api.BashFileReference"
                                 implementationClass="com.ansorgit.plugins.bash.lang.psi.impl.refactoring.BashFileReferenceManipulator" />
        <lang.elementManipulator forClass="com.ansorgit.plugins.bash.lang.psi.api.command.BashCommand"
                                 implementationClass="com.ansorgit.plugins.bash.lang.psi.impl.refactoring.BashCommandManipulator" />
        <lang.elementManipulator forClass="com.ansorgit.plugins.bash.lang.psi.api.word.BashWord"
                                 implementationClass="com.ansorgit.plugins.bash.lang.psi.impl.refactoring.BashWordManipulator" />
        <lang.elementManipulator forClass="com.ansorgit.plugins.bash.lang.psi.api.BashString"
                                 implementationClass="com.ansorgit.plugins.bash.lang.psi.impl.refactoring.BashStringManipulator" />
        <lang.elementManipulator forClass="com.ansorgit.plugins.bash.lang.psi.api.heredoc.BashHereDoc"
                                 implementationClass="com.ansorgit.plugins.bash.lang.psi.impl.refactoring.BashHereDocManipulator" />
        <lang.elementManipulator forClass="com.ansorgit.plugins.bash.lang.psi.api.BashKeyword"
                                 implementationClass="com.ansorgit.plugins.bash.lang.psi.impl.refactoring.BashKeywordManipulator" />

        <renamePsiElementProcessor implementation="com.ansorgit.plugins.bash.lang.psi.impl.BashFileRenameProcessor"/>

        <readWriteAccessDetector implementation="com.ansorgit.plugins.bash.editor.accessDetector.BashReadWriteAccessDetector"/>

        <preloadingActivity implementation="com.ansorgit.plugins.bash.editor.codecompletion.PreloadPathCompletionActivity"/>
        <applicationService serviceImplementation="com.ansorgit.plugins.bash.editor.codecompletion.BashPathCompletionService" />
        <completion.contributor language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.codecompletion.BashCompletionContributor"/>

        <indexPatternBuilder implementation="com.ansorgit.plugins.bash.lang.psi.BashIndexPatternBuilder" />
        <idIndexer filetype="Bash" implementationClass="com.ansorgit.plugins.bash.lang.psi.BashIdIndexer" />
        <todoIndexer filetype="Bash" implementationClass="com.ansorgit.plugins.bash.lang.psi.BashTodoIndexer" />

        <defaultLiveTemplatesProvider implementation="com.ansorgit.plugins.bash.editor.liveTemplates.BashLiveTemplatesProvider" />
        <liveTemplateContext implementation="com.ansorgit.plugins.bash.editor.liveTemplates.BashLiveTemplatesContext"/>

        <internalFileTemplate name="Bash Script"/>

        <annotator language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.annotator.BashAnnotator"/>

        <codeInsight.lineMarkerProvider language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.BashLineMarkerProvider"/>

        <runConfigurationProducer implementation="com.ansorgit.plugins.bash.runner.BashRunConfigProducer"/>
        <configurationType implementation="com.ansorgit.plugins.bash.runner.BashConfigurationType"/>
        <programRunner implementation="com.ansorgit.plugins.bash.runner.BashRunner"/>

        <moveFileHandler implementation="com.ansorgit.plugins.bash.refactoring.BashFileMoveHandler" id="BashMove" />

        <spellchecker.support implementationClass="com.ansorgit.plugins.bash.editor.BashSpellCheckingSupport" language="Bash" />

        <enterHandlerDelegate implementation="com.ansorgit.plugins.bash.editor.BashUnmatchedBraceEnterProcessor" order="FIRST" id="BashUnmatchedBrace" />
        <enterHandlerDelegate implementation="com.ansorgit.plugins.bash.editor.EnterInStringLiteralHandler" />

        <!-- Repl-->
        <projectConfigurable groupId="language" instance="com.ansorgit.plugins.bash.settings.BashProjectSettingsConfigurable" id="BashSupport" key="settings.project.groupTitle" bundle="com.ansorgit.plugins.bash.bash" />

        <!-- Error reporter-->
        <errorHandler implementation="nu.studer.idea.errorreporting.PluginErrorReportSubmitter"/>

        <!-- stubs -->
        <stubElementTypeHolder class="com.ansorgit.plugins.bash.lang.parser.BashElementTypes"/>

        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashFunctionNameIndex"/>
        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashScriptNameIndex"/>
        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashIncludedFilenamesIndex"/>
        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashIncludeCommandIndex"/>
        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashCommandNameIndex"/>
        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashVarDefIndex"/>
        <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashVarIndex"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashFixShebang"
                         key="inspection.fixShebang.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.FixShebangInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName" runForWholeFile="true"
                         shortName="BashAddShebang"
                         key="inspection.addShebang.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.AddShebangInspection"/>

        <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName"
                         shortName="BashSimpleVarUsage"
                         key="inspection.simpleVarUsage.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.SimpleVarUsageInspection"/>

        <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName"
                         shortName="BashGlobalLocalVarDef"
                         key="inspection.globalLocalVar.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.GlobalLocalVarDefInspection"/>

        <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName"
                         shortName="BashWrapFunction"
                         key="inspection.wrapFunction.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.FunctionDefInspection"/>

        <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName"
                         shortName="BashWrapWord"
                         key="inspection.wrapWord.name"
                         enabledByDefault="false"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.WrapWordInStringInspection"/>

        <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName"
                         shortName="BashReplaceWithBackquote"
                         key="inspection.replaceWithBackquote.name"
                         enabledByDefault="false"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.ConvertSubshellInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashDuplicateFunction"
                         key="inspection.duplicateFunction.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.DuplicateFunctionDefInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashMissingInclude"
                         key="inspection.missingInclude.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.MissingIncludeFileInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashRecursiveInclusion"
                         key="inspection.recursiveInclusion.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.RecursiveIncludeFileInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashEvaluateExpression"
                         key="inspection.evaluateExpansion.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.EvaluateExpansionInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashUnresolvedVariable"
                         key="inspection.unresolvedVariable.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.UnresolvedVariableInspection"/>

        <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName"
                         shortName="BashGloballyRegisteredVariable"
                         key="inspection.globallyRegisteredVariable.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.GloballyRegisteredVariableInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashEvaluateArithmeticExpression"
                         key="inspection.evaluateArithmeticExpression.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.EvaluateArithmeticExpressionInspection"/>

        <localInspection language="Bash" level="INFO" groupKey="inspection.groupName"
                         shortName="BashFloatArithmetic"
                         key="inspection.floatArithmetic.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.FloatArithmeticInspection"/>

        <localInspection language="Bash" level="ERROR" groupKey="inspection.groupName"
                         shortName="BashReadOnlyVariable"
                         key="inspection.readOnlyVar.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.ReadonlyVariableInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashBuiltInVariable"
                         key="inspection.builtInVar.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.InternalVariableInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashUnknownFileDescriptor"
                         key="inspection.unknownFileDescriptor.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.UnknownFiledescriptorInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashUnusedFunctionParams"
                         key="inspection.unusedFunctionParams.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.UnusedFunctionParameterInspection"/>

        <localInspection language="Bash" level="INFO" groupKey="inspection.groupName"
                         shortName="BashReplaceWithSubshell"
                         key="inspection.convertBackquote.name"
                         enabledByDefault="false"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.ConvertBackquoteInspection"/>

        <localInspection language="Bash" level="INFO" groupKey="inspection.groupName"
                         shortName="BashReplaceWithDoubleBrackets"
                         key="inspection.convertSimpleBrackets.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.UseExtendedTestCommandInspection"/>

        <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName"
                         shortName="BashUnusedFunction"
                         key="inspection.unusedFunctionDef.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.UnusedFunctionDefInspection"/>

        <localInspection language="Bash" level="INFO" groupKey="inspection.groupName"
                         shortName="BashSimpleArrayUse"
                         key="inspection.simpleArrayUse.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.SimpleArrayUseInspection"/>

        <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName"
                         shortName="BashInternalCommandFunctionOverride"
                         key="inspection.internalCommandOverride.name"
                         enabledByDefault="true"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.InternalCommandFunctionOverrideInspection"/>

        <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName"
                         shortName="BashFunctionNamesShouldBeLowerSnakeCase"
                         key="inspection.functionNamesShouldBeLowerSnakeCase.name"
                         enabledByDefault="false"
                         implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.FunctionNamesShouldBeLowerSnakeCaseInspection"/>

    </extensions>
</idea-plugin>
