#
# Copyright 2013 Joachim Ansorg, mail@ansorg-it.com
# File: bash.properties, Class: bash.properties
# Last modified: 2013-04-29
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

plugin.bash.name=BashSupport
plugin.bash.description=BashSupport provides support for Unix Bash scripts.

parser.redirect.expected.target=Expected a redirect target
parser.redirected.expected.filedescriptor=Expected a number for a filedescriptor
parser.redirect.expected.notFound=Expected a redirect clause

parser.command.expected.command=Expected a command

parser.list.expected.lineend=Expected a line termination (either ';' , '&' or line feed)

parser.time.expected.time=Expected a time command

parser.pipeline.expected.pipeline=Expected a command with optional pipeline

parser.shell.expectedCommands=Expected one or more commands
parser.shell.expectedDo=Expected keyword "do"
parser.shell.expectedDone=Expected keyword 'done'
parser.shell.if.expectedThen=Expected keyword 'then"
parser.shell.if.expectedIf=Expected 'if'
parser.shell.if.expectedElif=Expected 'elif'
parser.shell.if.expectedFi=Expected keyword 'fi'
parser.shell.for.expectedWord=Expected an identifier
parser.shell.loop.expectedBody=Expected loop body
parser.shell.conditional.expectedEnd=Expected end of conditional expression
parser.shell.if.expectedCommands=Expected one or more commands
parser.shell.include.expectedFilename=Expected a filename to include

parser.redirect.expected.string=Expected a string

parser.paramExpansion.empty = Invalid parameter expansion

parser.heredoc.expectedEnd=Expected end of here doc

parser.unexpected.token=Unexpected token
file.template.group.title.bash=Bash file templates
newfile.dialog.prompt=Create a new Bash file
newfile.dialog.title=Create Bash file
newfile.command.name=Bash file
newfile.menu.action.text=Create bash file
newfile.menu.action.description=Creates a new bash file

inspection.groupName=BashSupport

inspection.simpleVarUsage.name=Simple variable usage

inspection.globalLocalVar.name=Global definition of local variable

inspection.fixShebang.name=Fix unusal Shebang

inspection.wrapFunction.name=Wrap function body in {}

inspection.addShebang.name=Add missing shebang line to file
inspection.wrapWord.name=Convert to a quoted or unquoted string
inspection.replaceWithBackquote.name=Convert subshell to backquote command
inspection.duplicateFunction.name=Duplicate function definition
inspection.missingInclude.name=Missing include file
inspection.recursiveInclusion.name=Recursive file inclusion
inspection.evaluateExpansion.name=Evaluate expansion
inspection.unresolvedVariable.name=Unresolved variable
inspection.globallyRegisteredVariable.name=Globally registered variable
inspection.unregisterGlovalVariable.name=Unregister global variable
inspection.evaluateArithmeticExpression.name=Evaluate arithmetic expression
inspection.floatArithmetic.name=Integer division with remainder found.
inspection.readOnlyVar.name=Read-only variable
inspection.builtInVar.name=Change to a built-in shell variable
inspection.unknownFileDescriptor.name=Unknown filedescriptor. Only 0 to 9 are valid.
inspection.unusedFunctionParams.name=Unused function parameter
inspection.convertBackquote.name=Convert backquote to subshell commands
inspection.convertSimpleBrackets.name=Convert simple brackets to double brackets
inspection.unusedFunctionDef.name=Unused function definition
inspection.simpleArrayUse.name=Simple use of array variable
inspection.arrayUseOfSimpleVar.name=Array use of a simple, non-array variable
inspection.internalCommandOverride.name=Function overrides internal command
settings.project.groupTitle=BashSupport